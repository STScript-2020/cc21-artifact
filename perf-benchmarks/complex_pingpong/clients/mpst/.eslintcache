[{"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/index.tsx":"1","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/serviceWorker.ts":"2","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/App.tsx":"3","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Send.tsx":"4","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Receive.tsx":"5","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/Benchmark.tsx":"6","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Terminal.tsx":"7","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/index.ts":"8","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Client.tsx":"9","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S5.tsx":"10","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S7.tsx":"11","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S6.tsx":"12","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Cancellation.ts":"13","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Roles.ts":"14","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Message.ts":"15","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/Timer.ts":"16","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/EFSM.ts":"17"},{"size":503,"mtime":1609086297888,"results":"18","hashOfConfig":"19"},{"size":5295,"mtime":1609086297890,"results":"20","hashOfConfig":"19"},{"size":1117,"mtime":1609086297853,"results":"21","hashOfConfig":"19"},{"size":760,"mtime":1609086297884,"results":"22","hashOfConfig":"19"},{"size":455,"mtime":1609086297875,"results":"23","hashOfConfig":"19"},{"size":624,"mtime":1609086297853,"results":"24","hashOfConfig":"19"},{"size":242,"mtime":1609086297885,"results":"25","hashOfConfig":"19"},{"size":304,"mtime":1609086297874,"results":"26","hashOfConfig":"19"},{"size":11066,"mtime":1609086423131,"results":"27","hashOfConfig":"19"},{"size":792,"mtime":1609086297859,"results":"28","hashOfConfig":"19"},{"size":2433,"mtime":1609086297871,"results":"29","hashOfConfig":"19"},{"size":352,"mtime":1609086297870,"results":"30","hashOfConfig":"19"},{"size":512,"mtime":1609086297855,"results":"31","hashOfConfig":"19"},{"size":285,"mtime":1609086297858,"results":"32","hashOfConfig":"19"},{"size":309,"mtime":1609086297857,"results":"33","hashOfConfig":"19"},{"size":1803,"mtime":1609086324414,"results":"34","hashOfConfig":"19"},{"size":752,"mtime":1609086297856,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"wvakad",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/index.tsx",[],["74","75"],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/serviceWorker.ts",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/App.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Send.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Receive.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/Benchmark.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/components/Terminal.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/index.ts",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Client.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S5.tsx",["76","77"],"import React from 'react';\r\n\r\nimport * as Roles from './Roles';\r\n\r\nimport {\r\n    ReceiveState,\r\n    SendState,\r\n    TerminalState\r\n} from './EFSM';\r\n\r\nimport {\r\n    SendComponentFactory,\r\n    SendComponentFactoryFactory\r\n} from './Session';\r\n\r\n\r\n\r\n// ===============\r\n// Component types\r\n// ===============\r\n\r\ntype Props = {\r\n    factory: SendComponentFactoryFactory\r\n}\r\n\r\n/**\r\n * __Sends to  Svr.__ Possible messages:\r\n *\r\n * * __PING__(number)\r\n */\r\nexport default abstract class S5<ComponentState = {}> extends React.Component<Props, ComponentState>\r\n{\r\n\r\n    protected PING: SendComponentFactory<[number]>;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.PING = props.factory<[number]>(\r\n            Roles.Peers.Svr, 'PING', ReceiveState.S7\r\n        );\r\n\r\n    }\r\n}","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S7.tsx",["78"],"import React from 'react';\r\n\r\nimport * as Roles from './Roles';\r\nimport {\r\n    State,\r\n    ReceiveState,\r\n    SendState,\r\n    TerminalState,\r\n} from './EFSM';\r\n\r\nimport {\r\n    MaybePromise,\r\n} from './Types';\r\n\r\nimport {\r\n    ReceiveHandler\r\n} from './Session';\r\n\r\n\r\n\r\n// ==================\r\n// Message structures\r\n// ==================\r\n\r\nenum Labels {\r\n    PONG = 'PONG', BYE = 'BYE',\r\n}\r\n\r\ninterface PONGMessage {\r\n    label: Labels.PONG,\r\n    payload: [number],\r\n};\r\ninterface BYEMessage {\r\n    label: Labels.BYE,\r\n    payload: [number],\r\n};\r\n\r\n\r\ntype Message = | PONGMessage | BYEMessage\r\n\r\n// ===============\r\n// Component types\r\n// ===============\r\n\r\ntype Props = {\r\n    register: (role: Roles.Peers, handle: ReceiveHandler) => void\r\n};\r\n\r\n/**\r\n * __Receives from Svr.__ Possible messages:\r\n *\r\n * * __PONG__(number)\r\n * * __BYE__(number)\r\n */\r\nexport default abstract class S7<ComponentState = {}> extends React.Component<Props, ComponentState>\r\n{\r\n\r\n    componentDidMount() {\r\n        this.props.register(Roles.Peers.Svr, this.handle.bind(this));\r\n    }\r\n\r\n    handle(message: any): MaybePromise<State> {\r\n        const parsedMessage = JSON.parse(message) as Message;\r\n        switch (parsedMessage.label) {\r\n            case Labels.PONG: {\r\n                const thunk = () => SendState.S5;\r\n\r\n                const continuation = this.PONG(...parsedMessage.payload);\r\n                if (continuation instanceof Promise) {\r\n                    return new Promise((resolve, reject) => {\r\n                        continuation.then(() => {\r\n                            resolve(thunk());\r\n                        }).catch(reject);\r\n                    })\r\n                } else {\r\n                    return thunk();\r\n                }\r\n            } case Labels.BYE: {\r\n                const thunk = () => TerminalState.S6;\r\n\r\n                const continuation = this.BYE(...parsedMessage.payload);\r\n                if (continuation instanceof Promise) {\r\n                    return new Promise((resolve, reject) => {\r\n                        continuation.then(() => {\r\n                            resolve(thunk());\r\n                        }).catch(reject);\r\n                    })\r\n                } else {\r\n                    return thunk();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    abstract PONG(payload1: number, ): MaybePromise<void>;\r\n    abstract BYE(payload1: number, ): MaybePromise<void>;\r\n\r\n}","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/S6.tsx",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Cancellation.ts",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Roles.ts",["79"],"// Roles.ts\r\n\r\nexport enum Peers {\r\n    Svr = \"Svr\",\r\n};\r\n\r\nexport type All = Self | Peers;\r\nexport type Self = \"Client\";\r\n\r\nexport type PeersToMapped<Value> = {\r\n    [Role in Peers]: Value\r\n};\r\n\r\n// Aliases\r\nexport const Self: Self = \"Client\";\r\nexport const Server: Peers = Peers.Svr;","/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/Message.ts",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/Timer.ts",[],"/Users/Anson/Projects/SessionTS/perf-benchmarks/complex_pingpong/clients/mpst/src/PingPong/Client/EFSM.ts",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":7,"column":5,"nodeType":"86","messageId":"87","endLine":7,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":8,"column":5,"nodeType":"86","messageId":"87","endLine":8,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":6,"column":5,"nodeType":"86","messageId":"87","endLine":6,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":15,"column":14,"nodeType":"86","messageId":"92","endLine":15,"endColumn":24},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"@typescript-eslint/no-unused-vars","'SendState' is defined but never used.","Identifier","unusedVar","'TerminalState' is defined but never used.","'ReceiveState' is defined but never used.","@typescript-eslint/no-redeclare","'Self' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]