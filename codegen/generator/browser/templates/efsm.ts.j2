// EFSM.ts

// ======
// States
// ======

export enum SendState {
  {% for state in endpoint.efsm.send_states -%}
  S{{ state }} = 'S{{ state }}',
  {%- endfor %}
};

export enum ReceiveState {
  {% for state in endpoint.efsm.receive_states -%}
  S{{ state }} = 'S{{ state }}',
  {%- endfor %}
};

export enum TerminalState {
  {% if endpoint.efsm.has_terminal_state() -%}
  S{{ endpoint.efsm.terminal_state }} = 'S{{ endpoint.efsm.terminal_state }}',
  {%- endif %}
};

export type State = ReceiveState | SendState | TerminalState;

// ===========
// Type Guards
// ===========

export function isReceiveState(state: State): state is ReceiveState {
  return (Object.values(ReceiveState) as Array<State>).includes(state)
}

export function isSendState(state: State): state is SendState {
  return (Object.values(SendState) as Array<State>).includes(state)
}

export function isTerminalState(state: State): state is TerminalState {
  return (Object.values(TerminalState) as Array<State>).includes(state)
}